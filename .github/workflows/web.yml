name: baloncesto-pre

on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: self-hosted

    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker images
        run: |
          docker build . --file Dockerfile --tag omaraitlhouss1/webapp:latest
    
      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "omaraitlhouss1" --password-stdin

      - name: Push Docker images to Docker Hub
        run: |
          docker push omaraitlhouss1/webapp:latest

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client 

      - name: SSH into Azure VM and echo message
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Login successful"
      
      - name: Check if container is running
        run: |
          if docker ps -a --format '{{.Names}}' | grep -Eq '^webapp$'; then
            docker stop webapp
          fi

      - name: Remove existing container (if any)
        run: |
          if docker ps -a --format '{{.Names}}' | grep -Eq '^webapp$'; then
            docker rm webapp
          fi

  qa:
    needs: build
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: calidad-codigo
        run: |
          mvn sonar:sonar -Dsonar.host.url=http://sonarqubeIC:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=admin

  stage:
    needs: qa
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: descargar repostorio
        uses: actions/checkout@v3
      - name: Crear el archivo .war
        run: |
          mvn package -DskipTests=true
      - name: Desplegar en Azure
        uses: Azure/webapps-deploy@v2
        with:
          app-name: pre-baloncesto-majjaoui
          publish-profile: ${{ secrets.PRE_AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: target/*.war

  deploy:
    needs: stage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: descargar repostorio
        uses: actions/checkout@v3
      - name: Crear el archivo .war
        run: |
          mvn package -DskipTests=true
      - name: Aprobaci√≥n manual
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.TOKEN }}
          approvers: mhem-space
      - name: Desplegar en Azure
        uses: Azure/webapps-deploy@v2
        with:
          app-name: baloncesto-majjaoui
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: target/*.war
